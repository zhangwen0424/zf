{"version":3,"file":"bundle.js","sources":["../src/index.ts"],"sourcesContent":["// 装饰器的概念： 本质就是一个函数，只能扩展类和类的成员\n// 装饰器的语法是ES7的实验性语法，装饰器不是预设版本，使用需要配置，tsconfig.json 中启用装饰器, \"experimentalDecorators\": true\n\nfunction Decorator(target: any) {\n  target.type = \"动物\";\n  target.getType = function () {\n    return this.type;\n  };\n  target.prototype.eat = function () {\n    console.log(\"eat\");\n  };\n  target.prototype.drink = function () {\n    console.log(\"drink\");\n  };\n}\n// 可以返回子类，这个子类用于重写父类\nfunction OverrideAnimal(target: any) {\n  return class extends target {\n    eat() {\n      super.eat();\n      console.log(\"child eat\");\n    }\n  };\n}\n@Decorator\nclass Animal {}\n// 在类中使用属性，需要通过命名空间\n// namespace Animal {\n//   export const type: string = \"\";\n// }\n// console.log(Animal.type);\nconsole.log((Animal as any).getType());\n"],"names":[],"mappings":";;;EAAA;EACA;;;;;;;EAEA,SAAS,SAAS,CAAC,MAAW,EAAA;EAC5B,IAAA,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;MACnB,MAAM,CAAC,OAAO,GAAG,YAAA;UACf,OAAO,IAAI,CAAC,IAAI,CAAC;EACnB,KAAC,CAAC;EACF,IAAA,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,YAAA;EACrB,QAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrB,KAAC,CAAC;EACF,IAAA,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,YAAA;EACvB,QAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;EACvB,KAAC,CAAC;EACJ,CAAC;EAWD,IAAM,MAAM,GAAZ,MAAM,MAAM,CAAA;GAAG,CAAA;EAAT,MAAM,GAAA,UAAA,CAAA;MADX,SAAS;EACJ,CAAA,EAAA,MAAM,CAAG,CAAA;EACf;EACA;EACA;EACA;EACA;EACA,OAAO,CAAC,GAAG,CAAE,MAAc,CAAC,OAAO,EAAE,CAAC;;;;;;"}